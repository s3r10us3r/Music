@{
    ViewData["Title"] = "New Album";
    Layout = "_Layout";
}

<div class="container mt-4">
    <h1 class="text-center mb-4">Add a New Album</h1>

    <form id="addAlbumForm" enctype="multipart/form-data">
        <div class="form-group mb-3">
            <label for="nameInput" class="form-label">Album Name:</label>
            <input type="text" class="form-control" id="nameInput" name="name" placeholder="Enter album name" required />
        </div>
        <div class="form-group mb-3">
            <label for="artistInput" class="form-label">Artist:</label>
            <input type="text" class="form-control" id="artistInput" name="artist" placeholder="Enter artist name" required />
        </div>
        <div class="form-group mb-3">
            <label for="yearInput" class="form-label">Year:</label>
            <input type="number" class="form-control" id="yearInput" name="year" placeholder="Enter release year" min="1900" max="@DateTime.Now.Year" required />
        </div>
        <div class="form-group mb-3">
            <label for="imageInput" class="form-label">Album Cover:</label>
            <input type="file" class="form-control" id="imageInput" name="image" accept="image/*" required />
        </div>
        <button type="submit" class="btn btn-primary w-100">Submit</button>
    </form>
</div>

<script>
    document.getElementById("addAlbumForm").addEventListener("submit", async function (event) {
        event.preventDefault(); // Prevent default form submission behavior

        const form = event.target;
        const formData = new FormData(form);

        // Read the image file and encode it as base64
        const imageInput = document.getElementById("imageInput");
        if (imageInput.files.length > 0) {
            const file = imageInput.files[0];
            formData.set("image", await toBase64(file));
        }

        // Prepare the data for JSON payload
        const albumData = {
            name: formData.get("name"),
            artist: formData.get("artist"),
            year: formData.get("year"),
            image: formData.get("image") // Base64 encoded image
        };

        // Get JWT from local storage
        const jwtObject = localStorage.getItem("jwt");
        const token = jwtObject ? JSON.parse(jwtObject).value : null;
        if (!token) {
            alert("You need to be logged in to add an album.");
            return;
        }

        // Make the POST request
        try {
            const response = await fetch("/api/Album", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": `Bearer ${token}`
                },
                body: JSON.stringify(albumData)
            });

            if (!response.ok) {
                const error = await response.json();
                console.error("Error:", error);
                alert(error.message || "Failed to add the album.");
                return;
            }

            // Success
            alert("Album added successfully!");
            form.reset(); // Reset the form fields
        } catch (error) {
            console.error("An error occurred:", error);
            alert("An unexpected error occurred. Please try again.");
        }
    });

    // Helper function to convert a file to Base64
    function toBase64(file) {
        return new Promise((resolve, reject) => {
            const reader = new FileReader();
            reader.onload = () => resolve(reader.result.split(",")[1]); // Remove the data:image/... prefix
            reader.onerror = (error) => reject(error);
            reader.readAsDataURL(file);
        });
    }
</script>
